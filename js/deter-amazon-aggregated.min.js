import{processCloudData,loadData,registerDataOnCrossfilter,processData}from"./deter-amazon-aggregated-data.js";import{getFileDeliveryURL,getProject}from"./downloadSHP.js";import{build}from"./build-chart.js";var ringPallet=null,defPallet=null,cldPallet=null,defaultHeight=null,calendarConfiguration="prodes",deforestation=["DESMATAMENTO_CR","DESMATAMENTO_VEG","MINERACAO"],degradation=["CICATRIZ_DE_QUEIMADA","CORTE_SELETIVO","CS_DESORDENADO","CS_GEOMETRICO","DEGRADACAO"];function init(){Lang.apply(),loadConfigurations().then(config=>{startLoadData(config)})}function loadConfigurations(){return new Promise((resolve,reject)=>{d3.json("config/deter-amazon-aggregated.json",(error,data)=>{null!=error?reject(error):resolve({ringPallet:data.ringPallet?data.ringPallet:ringPallet,defPallet:data.defPallet?data.defPallet:defPallet,cldPallet:data.cldPallet?data.cldPallet:cldPallet,defaultHeight:data.defaultHeight?data.defaultHeight:defaultHeight,legendOriginal:data.legendOriginal?data.legendOriginal:void 0,legendOverlay:data.legendOverlay?data.legendOverlay:void 0})})})}function startLoadData(configurations){let cloudDataUrl=getFileDeliveryURL()+"/download/"+getProject()+"/cloud",deforDataUrl=getFileDeliveryURL()+"/download/"+getProject()+"/monthly";loadData(cloudDataUrl).then(async data=>{let cloudData=processCloudData(data,calendarConfiguration);const deforData=await loadData(deforDataUrl);let deforProcessed=processData(deforData,calendarConfiguration),context;return registerDataOnCrossfilter({cloudData:cloudData,deforData:deforProcessed,deforestation:deforestation,degradation:degradation,calendarConfiguration:calendarConfiguration,configurations:configurations})}).then(registerDataContext=>{registerDataContext.configurations=configurations,registerDataContext.calendarConfiguration=calendarConfiguration,registerDataContext.defaultHeight=defaultHeight,build(registerDataContext)}).catch(error=>{console.error("Erro ao carregar os dados:",error)})}function resetFilter(who,group){var g=void 0===group?"filtra":group;"state"==who?graph.ringTotalizedByState.filterAll():"year"==who?graph.barAreaByYear.filterAll():"class"==who?(graph.rowTotalizedByClass.filterAll(),graph.filterByClassGroup("custom")):"agreg"==who&&(graph.lineSeriesMonthly.filterAll(),graph.monthDimension.filterAll(),graph.monthDimension0.filterAll(),graph.monthFilters=[],utils.highlightSelectedMonths(),dc.redrawAll("filtra")),dc.redrawAll(g)}window.onload=()=>{Lang.init(),init()};